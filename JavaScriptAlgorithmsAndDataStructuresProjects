// 01 - JavaScript Algorithms and Data Structures Projects: Palindrome Checker
// Return trueif the given string is a palindrome. Otherwise, return false.
// A palindrome is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing.
// Note
// You'll need to remove all non-alphanumeric characters (punctuation, spaces and symbols) and turn everything into the same case (lower or upper case) in order to check for palindromes.
// We'll pass strings with varying formats, such as "racecar", "RaceCar", and "race CAR"among others.
// We'll also pass strings with special symbols, such as "2A3*3a2", "2A3 3a2", and "2_A3*3#A2".

function palindrome(str) {
  
  str = str.replace(/[^a-z0-9+]+/gi, "").toLowerCase();
  let newString = str.split("");
  let reversed = newString.reverse().join("");
  return str === reversed ? true : false;
  
}

palindrome("nope")

// palindrome("eye")should return a boolean.
// palindrome("eye")should return true.
// palindrome("_eye")should return true.
// palindrome("race car")should return true.
// palindrome("not a palindrome")should return false.
// palindrome("A man, a plan, a canal. Panama")should return true.
// palindrome("never odd or even")should return true.
// palindrome("nope")should return false.
// palindrome("almostomla")should return false.
// palindrome("My age is 0, 0 si ega ym.")should return true.
// palindrome("1 eye for of 1 eye.")should return false.
// palindrome("0_0 (: /-\ :) 0-0")should return true.
// palindrome("five|\_/|four")should return false.



// 02 - JavaScript Algorithms and Data Structures Projects: Roman Numeral Converter
// Convert the given number into a roman numeral.
// All roman numerals answers should be provided in upper-case.

function convertToRoman(num) {
  let romanNumeral = '';
  let conversionTable = {

    "M" : 1000,
    "CM": 900,
    "D" : 500,
    "CD": 400,
    "C" : 100,
    "XC": 90,
    "L" : 50,
    "XL": 40,
    "X" : 10,
    "IX": 9,
    "V" : 5,
    "IV": 4,
    "I" : 1

  };

Object.keys(conversionTable).forEach(function(item) {
  while (num >= conversionTable[item]) {
    romanNumeral += item;
    num -= conversionTable[item];
      }
  });
  return romanNumeral;
}

convertToRoman(36);

// convertToRoman(2)should return "II".
// convertToRoman(3)should return "III".
// convertToRoman(4)should return "IV".
// convertToRoman(5)should return "V".
// convertToRoman(9)should return "IX".
// convertToRoman(12)should return "XII".
// convertToRoman(16)should return "XVI".
// convertToRoman(29)should return "XXIX".
// convertToRoman(44)should return "XLIV".
// convertToRoman(45)should return "XLV"
// convertToRoman(68)should return "LXVIII"
// convertToRoman(83)should return "LXXXIII"
// convertToRoman(97)should return "XCVII"
// convertToRoman(99)should return "XCIX"
// convertToRoman(400)should return "CD"
// convertToRoman(500)should return "D"
// convertToRoman(501)should return "DI"
// convertToRoman(649)should return "DCXLIX"
// convertToRoman(798)should return "DCCXCVIII"
// convertToRoman(891)should return "DCCCXCI"
// convertToRoman(1000)should return "M"
// convertToRoman(1004)should return "MIV"
// convertToRoman(1006)should return "MVI"
// convertToRoman(1023)should return "MXXIII"
// convertToRoman(2014)should return "MMXIV"
// convertToRoman(3999)should return "MMMCMXCIX"



// 03 - JavaScript Algorithms and Data Structures Projects: Caesars Cipher
// One of the simplest and most widely known ciphers is a Caesar cipher, also known as a shift cipher. 
// In a shift cipherthe meanings of the letters are shifted by some set amount.
// A common modern use is the ROT13 cipher, where the values of the letters are shifted by 13 places. Thus 'A' ↔ 'N', 'B' ↔ 'O' and so on.
// Write a function which takes a ROT13 encoded string as input and returns a decoded string.
// All letters will be uppercase. Do not transform any non-alphabetic character (i.e. spaces, punctuation), but do pass them on.


const rot13 = str => str.replace(/[A-Z]/g, L => String.fromCharCode((L.charCodeAt(0) % 26) + 65));

rot13("SERR PBQR PNZC");

// rot13("SERR PBQR PNZC")should decode to FREE CODE CAMP
// rot13("SERR CVMMN!")should decode to FREE PIZZA!
// rot13("SERR YBIR?")should decode to FREE LOVE?
// rot13("GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT.")should decode to THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.
